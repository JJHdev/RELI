<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserInfo">

    <!-- 로그인시 사용자정보 조회 -->
    <!--
    TODO. 2021.10.06 비밀번호 유효기한 체크시 필요한 칼럼이나 개발시엔 임시로 주석처리함
	TRUNC(SYSDATE) - TRUNC(TO_DATE(NVL(NVL(U.PSWD_CHG_YMD, TO_CHAR(U.REG_YMD,'yyyymmdd'))  ,'20000101') ,'yyyymmdd')) AS "diffDays",
	TRUNC(SYSDATE) - TRUNC(TO_DATE(NVL(U.PSWD_NEXT_YMD, TO_CHAR(SYSDATE,'yyyymmdd')),'yyyymmdd')) AS "diffNextDays"
     -->
    <select id="getUserInfo" resultType="common.user.UserInfo" parameterType="java.util.Map">
        SELECT /* 사용자정보 조회 */
		       U.USER_NO                              AS "userNo",
		       U.USER_ID                              AS "userId",
		       U.USER_NM                              AS "userNm",
		       U.PSWD                                 AS "pswd",
		       U.EML_ADDR                             AS "emlAddr",
		       U.TELNO                                AS "telno",
		       U.MBTEL_NO                             AS "mbtelNo",
		       U.BRDT                                 AS "brdt",
		       U.ZIP                                  AS "zip",
		       U.ADDR                                 AS "addr",
		       U.DADDR                                AS "daddr",
		       U.SXDST                                AS "sxdst",
		       U.DEPT_CD                              AS "deptCd",
		       U.DEPT_NM                              AS "deptNm",
		       FN_FMT_STRTODATE(U.JOIN_YMD,     '-')  AS "joinYmd",
		       FN_FMT_STRTODATE(U.PSWD_LOCK_YMD,'-')  AS "pswdLockYmd",
		       U.PSWD_ERR_CNT                         AS "pswdErrCnt",
		       FN_FMT_STRTODATE(U.PSWD_CHG_YMD, '-')  AS "pswdChgYmd",
		       FN_FMT_STRTODATE(U.PSWD_NEXT_YMD,'-')  AS "pswdNextYmd",
		       TO_CHAR(NVL(U.LST_LGN_DT, SYSDATE), 'yyyy-mm-dd hh24:mi:ss') AS "lstLgnDt",
		       U.MBTEL_RCPTN_AGRE_YN                  AS "mbtelRcptnAgreYn",
		       U.USE_STUS_CD                          AS "useStusCd",
		       U.TEST_USE_YN                          AS "testUseYn",
		       DECODE(U.USE_STUS_CD, '1', 'Y', 'N')   AS "useYn",
		       DECODE(U.USE_STUS_CD, '1', 'Y', 'N')   AS "enabled",
		       R.ROLE_ID                              AS "roleId",
		      (SELECT ROLE_NM
		         FROM SYS_ROLE
		        WHERE ROLE_ID = R.ROLE_ID)            AS "roleNm",
               TRUNC(SYSDATE) - TRUNC(NVL(NVL(TO_DATE(U.PSWD_CHG_YMD, 'yyyymmdd'), U.REG_YMD), TO_DATE('20000101', 'yyyymmdd')))      AS "diffDays",
               TRUNC(SYSDATE) - TRUNC(NVL(TO_DATE(U.PSWD_NEXT_YMD, 'yyyymmdd'), SYSDATE+1))                                           AS "diffNextDays",
		      (SELECT MFCMM_NO
		         FROM TB_MFCMM
		        WHERE USER_NO = U.USER_NO)            AS "mfcmmNo", <!-- 2023.10.23 위원번호 -->
		      (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
		         FROM TB_MFCMM         A0
		            , TB_MFCMM_TENURE  A1
		            , TB_CMIT_MNG      A2
		            , TB_CMIT_DMGE     A3
		        WHERE A0.USER_NO     = U.USER_NO
		          AND A1.MFCMM_NO    = A0.MFCMM_NO
		          AND A1.TENURE_NO   = A2.TENURE_NO
                  AND A2.CMIT_MNG_NO = A3.CMIT_MNG_NO
                  AND TO_CHAR(SYSDATE, 'YYYYMMDD') 
              BETWEEN A3.OPMT_BGNG_YMD 
                  AND A3.OPMT_END_YMD)               AS "mfcmmYn"  <!-- 2023.10.23 개최기간내 위원여부 -->
          FROM TB_USER U
             , (
                SELECT A.USER_NO
                     , LISTAGG(A.ROLE_ID,',') WITHIN GROUP(ORDER BY A.ROLE_ID) AS ROLE_ID
                  FROM SYS_ROLE_USER A
                     , SYS_ROLE B
                     , TB_USER C
                 WHERE A.USER_NO   = C.USER_NO
                   AND A.ROLE_ID   = B.ROLE_ID
                   AND C.USER_ID   = #{userId}
                 GROUP BY A.USER_NO
               ) R
         WHERE U.USER_NO = R.USER_NO
           AND U.USER_ID = #{userId}
           AND ROWNUM = 1
    </select>

    <!-- 로그인 시간 등록, 로그인 에러카운터 0으로 초기화 -->
    <update id="updtLoginTime">
        UPDATE TB_USER
           SET LST_LGN_DT   = SYSDATE
             , PSWD_ERR_CNT = 0
         WHERE USER_ID      = #{userId}
    </update>

    <!-- 로그인 실패 정보 업데이트(패스워드 실패횟수, 잠금시간)  -->
    <update id="updtPswdErrCnt">
        UPDATE TB_USER
           SET PSWD_ERR_CNT = #{pswdErrCnt}
          <if test="pswdErrCnt >= 5">
             , PSWD_LOCK_YMD = TO_CHAR(SYSDATE,'YYYYMMDD')
          </if>
         WHERE USER_ID = #{userId}
    </update>

    <!-- ======================== -->
    <!--  공통 sql                -->
    <!-- ======================== -->
    <sql id="Sql-Column">
		U.USER_NO              AS "userNo",
		U.USER_ID              AS "userId",
		U.USER_NM              AS "userNm",
		U.EML_ADDR             AS "emlAddr",
		U.TELNO                AS "telno",
		U.MBTEL_NO             AS "mbtelNo",
		U.BRDT                 AS "brdt",
		U.ZIP                  AS "zip",
		U.ADDR                 AS "addr",
		U.DADDR                AS "daddr",
		U.SXDST                AS "sxdst",
		U.DEPT_CD              AS "deptCd",
		U.DEPT_NM              AS "deptNm",
		U.JOIN_YMD             AS "joinYmd",
		U.PSWD_LOCK_YMD        AS "pswdLockYmd",
		U.PSWD_ERR_CNT         AS "pswdErrCnt",
		U.PSWD_CHG_YMD         AS "pswdChgYmd",
		U.PSWD_NEXT_YMD        AS "pswdNextYmd",
		U.LST_LGN_DT           AS "lstLgnDt",
		U.MBTEL_RCPTN_AGRE_YN  AS "mbtelRcptnAgreYn",
		U.USE_STUS_CD          AS "useStusCd",
		U.TEST_USE_YN          AS "testUseYn",
		U.RGTR_NO                                      AS "rgtrNo",
        TO_CHAR(U.REG_YMD, 'yyyy-mm-dd hh24:mi:ss')    AS "regDttm",
        TO_CHAR(U.REG_YMD, 'yyyy-mm-dd')               AS "regDate",
		U.MDFR_NO                                      AS "mdfrNo",
		TO_CHAR(U.MDFCN_YMD, 'yyyy-mm-dd hh24:mi:ss')  AS "mdfDttm",
        TO_CHAR(U.MDFCN_YMD, 'yyyy-mm-dd')             AS "mdfDate",
        R.ROLE_ID              AS "roleId",
      ( SELECT ROLE_NM
          FROM SYS_ROLE
         WHERE ROLE_ID = R.ROLE_ID
      )                        AS "roleNm"
    </sql>
    <sql id="Sql-Where">
        <if test="@common.util.CommUtils@isNotEmpty(srchText)">
            AND(U.USER_ID   LIKE '%' || #{srchText} || '%'
             OR U.USER_NM   LIKE '%' || #{srchText} || '%'
             OR U.EML_ADDR  LIKE '%' || #{srchText} || '%'
<!--              OR U.TEL_NO    LIKE '%' || #{srchText} || '%' -->
             OR U.MBTEL_NO  LIKE '%' || #{srchText} || '%'
             OR U.ADDR      LIKE '%' || #{srchText} || '%'
             OR U.DADDR     LIKE '%' || #{srchText} || '%')
        </if>
        <if test="@common.util.CommUtils@isNotEmpty(srchRoleId)">
            AND EXISTS (
                SELECT 1
                  FROM SYS_ROLE_USER
                 WHERE USER_NO = U.USER_NO
                   AND ROLE_ID = #{srchRoleId}
                )
        </if>
        <if test="@common.util.CommUtils@isEqual(srchRoleYn,'N')">
            AND NOT EXISTS (
                SELECT 1
                  FROM SYS_ROLE_USER
                 WHERE USER_NO = U.USER_NO
                )
        </if>
        <if test="gsRoleId != 'ROLE_AUTH_SYS'">
            AND R.ROLE_ID NOT IN ('ROLE_AUTH_SYS')
        </if>
    </sql>
    <sql id="Sql-From">
               TB_USER U
          LEFT OUTER JOIN
               (
                SELECT A.USER_NO
                     , LISTAGG(A.ROLE_ID,',') WITHIN GROUP(ORDER BY A.ROLE_ID) AS ROLE_ID
                  FROM SYS_ROLE_USER A
                     , SYS_ROLE      B
                 WHERE A.ROLE_ID   = B.ROLE_ID
                 GROUP BY A.USER_NO
               ) R
            ON U.USER_NO = R.USER_NO
    </sql>

    <!-- 사용자정보 목록조회 -->
    <select id="listUserInfo" resultType="business.sys.user.service.UserInfoVO" parameterType="java.util.HashMap">
        SELECT <include refid="Sql-Column"/>
          FROM <include refid="Sql-From"/>
         WHERE 1 = 1
               <include refid="Sql-Where"/>
         ORDER BY U.REG_YMD DESC
    </select>
    <select id="listUserInfoCount" resultType="int" parameterType="java.util.HashMap">
        SELECT COUNT(1)
          FROM <include refid="Sql-From"/>
         WHERE 1 = 1
               <include refid="Sql-Where"/>
    </select>

    <!-- 사용자정보 상세조회 -->
    <select id="viewUserInfo" resultType="business.sys.user.service.UserInfoVO" parameterType="string">
        SELECT <include refid="Sql-Column"/>
          FROM <include refid="Sql-From"/>
         WHERE U.USER_NO = #{userNo}
    </select>

    <!-- 사용자정보 등록 -->
    <insert id="regiUserInfo" parameterType="business.sys.user.service.UserInfoVO">
        <selectKey keyProperty="userNo" resultType="string" order="BEFORE">
            SELECT SEQ_USER.nextval FROM DUAL
        </selectKey>
        INSERT
          INTO TB_USER
             ( USER_NO,
               USER_ID,
               USER_NM,
               PSWD,
               EML_ADDR,
               TELNO,
               MBTEL_NO,
               BRDT,
               ZIP,
               ADDR,
               DADDR,
               SXDST,
               DEPT_CD,
               DEPT_NM,
               JOIN_YMD,
               USE_STUS_CD,
               TEST_USE_YN,
               RGTR_NO,
               REG_YMD,
               MBTEL_RCPTN_AGRE_YN
             )
        VALUES
             ( #{userNo},
               #{userId},
               #{userNm},
               SCP.HASH_B64('73', #{pswd}),
               #{emlAddr},
               #{telno},
               #{mbtelNo},
               #{brdt},
               #{zip},
               #{addr},
               #{daddr},
               #{sxdst},
               #{deptCd},
               #{deptNm},
               TO_CHAR(SYSDATE,'YYYYMMDD'),
               NVL(#{useStusCd},'1'),
               NVL(#{testUseYn},'N'),
               #{gsUserNo},
               SYSDATE,
               #{mbtelRcptnAgreYn}
             )
    </insert>

    <!-- 사용자정보 수정 -->
    <update id="updtUserInfo" parameterType="business.sys.user.service.UserInfoVO">
        UPDATE TB_USER
           SET USER_ID     = #{userId},
               USER_NM     = #{userNm},
               <!-- PSWD        = SCP.HASH_B64('73', #{pswd}), -->
               EML_ADDR    = #{emlAddr},
               TELNO       = #{telno},
               MBTEL_NO    = #{mbtelNo},
               BRDT        = #{brdt},
               ZIP         = #{zip},
               ADDR        = #{addr},
               DADDR       = #{daddr},
               SXDST       = #{sxdst},
               DEPT_CD     = #{deptCd},
               DEPT_NM     = #{deptNm},
               JOIN_YMD    = #{joinYmd},
               USE_STUS_CD = #{useStusCd},
               TEST_USE_YN = #{testUseYn},
               MDFR_NO     = #{gsUserNo},
               MDFCN_YMD   = SYSDATE,
               MBTEL_RCPTN_AGRE_YN = #{mbtelRcptnAgreYn}
         WHERE USER_NO     = #{userNo}
    </update>

    <!-- 사용자정보 삭제 -->
    <delete id="deltUserInfo" parameterType="string">
        DELETE
          FROM TB_USER
         WHERE USER_NO = #{userNo}
    </delete>

    <!-- 사용자아이디 중복체크 -->
    <select id="existUserId" resultType="int" parameterType="string">
        SELECT COUNT(*)
          FROM TB_USER A
         WHERE USER_ID = #{userId}
    </select>

    <!-- 사용자암호 일치여부 확인 (DAmo 단방향 암호화함수 사용)-->
    <select id="existUserPswd" resultType="int" parameterType="java.util.HashMap">
        SELECT COUNT(*)
          FROM TB_USER A
         WHERE USER_ID = #{userId}
           AND PSWD    = SCP.HASH_B64('73', #{password})
    </select>

    <!-- 관리자인증 - 관리자번호 일치여부 확인-->
    <select id="existAdminNo" resultType="boolean" parameterType="string">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
          FROM TB_USER A
         WHERE EMPL_NO = #{adminNo}
    </select>

    <!-- 사용자 아이디 찾기-->
    <select id="findUserId" resultType="string" parameterType="java.util.HashMap">
        SELECT USER_ID
          FROM TB_USER A
         WHERE USER_NM  = #{userNm}
           AND BRDT     = #{brdt}
           AND MBTEL_NO = #{mbtelNo}
    </select>

    <!-- 비밀번호 찾기조건 일치여부 확인 -->
    <select id="validateUserNo" resultType="string" parameterType="java.util.HashMap">
        SELECT USER_NO
          FROM TB_USER A
         WHERE USER_NM  = #{userNm}
           AND BRDT     = #{brdt}
           AND MBTEL_NO = #{mbtelNo}
           AND USER_ID  = #{userId}
    </select>

    <!-- 사용자 비밀번호변경 -->
    <update id="updtUserPswd" parameterType="java.util.HashMap">
        UPDATE TB_USER
           SET PSWD         = SCP.HASH_B64('73', #{pswd}),
               PSWD_CHG_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               PSWD_NEXT_YMD= null,
               MDFR_NO      = #{userNo},
               MDFCN_YMD    = SYSDATE
         WHERE USER_NO      = #{userNo}
    </update>

    <!-- 비밀번호변경 & 다음에변경(변경날짜만 입력함) 처리 저장  -->
    <update id="updtUserPswdNext" parameterType="java.util.HashMap">
        UPDATE TB_USER
           SET PSWD_NEXT_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
         WHERE USER_NO       = #{userNo}
    </update>


    <select id="checkUserPswdDupl" resultType="int" parameterType="java.util.HashMap">
        SELECT COUNT(*)
          FROM TB_USER A
         WHERE USER_NO = #{userNo}
           AND PSWD    = SCP.HASH_B64('73', #{pswd})
    </select>

</mapper>
